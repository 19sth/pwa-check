{"version":3,"file":"static/js/main.17051669.js","mappings":"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","sources":["src/components/ContentView.tsx","src/util.ts","src/components/DynamicListItem.tsx","src/screens/Dashboard.tsx","src/screens/Definitions.tsx","src/screens/DefinitionEdit.tsx","src/screens/Task.tsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { SizeScheme } from '@19sth/react-native-pieces';\nimport React from 'react';\nimport { ScrollView, View } from 'react-native';\n\nexport enum ViewType {\n    SCROLLVIEW,\n    VIEW\n}\n\nexport default function ContentView({ viewType, children }: { viewType?: ViewType, children: React.ReactNode }) {\n    const height = SizeScheme.get().screen.height.min - 145;\n    let view;\n    if (viewType === ViewType.SCROLLVIEW) {\n        view = (\n            <ScrollView style={{height}}>\n                {children}\n            </ScrollView>\n        );\n    } else {\n        view = (\n            <View style={{minHeight: height}}>\n                {children}\n            </View>\n        );\n    }\n\n    return view;\n}","export const KEY_DEFINITIONS = \"check_definitions\";\nexport const KEY_TASKS = \"check_tasks\";","import { ButtonIcon, ColorScheme, SizeScheme } from '@19sth/react-native-pieces';\nimport { IconDefinition, faEllipsisVertical } from '@fortawesome/free-solid-svg-icons';\nimport { Text, View } from 'react-native';\n\ninterface DynamicListItemProps {\n    children: React.ReactNode\n    index: number\n    height: number\n    showOptions: boolean\n    openShowOptions: (ix: number) => void\n    buttons: {\n        faIcon: IconDefinition\n        handleClick: (ix: number) => void\n    }[]\n}\n\nexport default function DynamicListItem(props: DynamicListItemProps) {\n\n    if (props.showOptions) {\n        return (\n            <View key={`dynamicItem_${props.index}`} style={{\n                height: props.height,\n                marginTop: 10,\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n            }}>\n                {\n                    props.buttons.map((e,i) => (\n                        <ButtonIcon\n                            key={`dynamicButton_${i}`}\n                            faIcon={e.faIcon}\n                            handleClick={() => {\n                                e.handleClick(props.index);\n                            }} />\n                    ))\n                }\n            </View>\n        );\n    } else {\n        return (\n            <View key={`dynamicItem_${props.index}`} style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n                justifyContent: 'space-between',\n                marginTop: 10,\n                alignItems: 'center',\n                height: props.height\n            }}>\n                <Text style={{\n                    fontSize: SizeScheme.get().font.d,\n                    fontWeight: 'bold',\n                    color: ColorScheme.get().secondary\n                }}>\n                    {props.index+1}\n                </Text>\n                <View style={{ flex: 1, paddingHorizontal: 5 }}>\n                    {props.children}\n                </View>\n                <ButtonIcon\n                    faIcon={faEllipsisVertical}\n                    handleClick={() => {\n                        props.openShowOptions(props.index);\n                    }} />\n            </View>\n        );\n    }\n}","import { ButtonText, Header, Input, InputTypes, Layout, Modal, Settings, SizeScheme, Takoz } from '@19sth/react-native-pieces';\nimport React, { useEffect, useState } from 'react';\nimport ContentView from '../components/ContentView';\nimport { faCheck, faCircleQuestion, faEdit, faList, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { KEY_TASKS } from '../util';\nimport { Pressable, Text, View } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport DynamicListItem from '../components/DynamicListItem';\nimport { ITask } from '../contracts';\n\nexport default function Dashboard({ navigation }) {\n    const [tasks, setTasks] = useState([] as ITask[]);\n    const [showOptions, setShowOptions] = useState([] as boolean[]);\n    const [taskNote, setTaskNote] = useState(\"\");\n    const [showTaskNoteModal, setShowTaskNoteModal] = useState(false);\n    const [taskIndex, setTaskIndex] = useState(-1);\n    const asyncStoreTasks = useAsyncStorage(KEY_TASKS);\n    const isFocused = useIsFocused();\n\n    const load = async () => {\n        let taskStr = await asyncStoreTasks.getItem();\n        if (!taskStr) {\n            taskStr = '[]';\n        }\n        const taskList = JSON.parse(taskStr);\n        setTasks(taskList);\n    }\n\n    useEffect(() => {\n        load();\n    }, [isFocused]);\n\n    return (\n        <Layout>\n            <Header\n                navigation={navigation}\n                title='Check'\n                buttons={[\n                    { faIcon: faCircleQuestion, handleClick: () => { \n                        window.open(\"https://mujdecisy.github.io/app/check-defined-tasks\", \"blank\");\n                     } },\n                    {\n                        faIcon: faList, handleClick: () => {\n                            navigation.push(\"Definitions\");\n                        }\n                    }\n                ]}\n            />\n            <ContentView>\n                {\n                    tasks.length < 1 && (\n                        <View>\n                            <Takoz height={20}/>\n                            <Text style={{\n                                fontSize: SizeScheme.get().font.c,\n                                textAlign: 'center'\n                            }}>\n                                There is no task to do daily.\n                            </Text>\n                            <Takoz height={20}/>\n                            <ButtonText\n                                label='Add a Task'\n                                handleClick={()=>{\n                                    navigation.push('Definitions');\n                                }}/>\n                        </View>\n                    )\n                }\n                {\n                    tasks.length > 0 &&\n                    tasks.map((e, i) => (\n                        <View key={`task_${i}`}>\n                            <DynamicListItem\n                                buttons={[\n                                    {\n                                        faIcon: faTrashCan, handleClick: async (ix) => {\n                                            const tShowOptions = [...showOptions];\n                                            tShowOptions[ix] = false;\n\n                                            const taskStr = await asyncStoreTasks.getItem();\n                                            const taskList = JSON.parse(taskStr);\n                                            taskList.splice(i, 1);\n                                            await asyncStoreTasks.setItem(JSON.stringify(taskList));\n\n                                            setShowOptions(tShowOptions);\n\n                                            load();\n                                        }\n                                    },\n                                    {\n                                        faIcon: faEdit, handleClick: (ix) => {\n                                            setTaskIndex(ix);\n                                            setTaskNote(tasks[ix].note);\n                                            setShowTaskNoteModal(true);\n                                        }\n                                    },\n                                    {\n                                        faIcon: faCheck, handleClick: (ix) => {\n                                            const tShowOptions = [...showOptions];\n                                            tShowOptions[ix] = false;\n                                            setShowOptions(tShowOptions);\n                                        }\n                                    }\n                                ]}\n                                height={50}\n                                index={i}\n                                showOptions={showOptions[i]}\n                                openShowOptions={(ix) => {\n                                    const tShowOptions = [...showOptions];\n                                    tShowOptions[ix] = true;\n                                    setShowOptions(tShowOptions);\n                                }}>\n                                <Pressable onPress={() => {\n                                    navigation.push('Task', { taskIndex: i });\n                                }}>\n                                    <View style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center'\n                                    }}>\n                                        <View style={{\n                                            paddingStart: 10,\n                                            flex: 1\n                                        }}>\n                                            <Text style={{\n                                                fontSize: SizeScheme.get().font.e,\n                                                fontWeight: 'bold'\n                                            }}>\n                                                {e.title}\n                                            </Text>\n                                            <View style={{\n                                                maxHeight: 33,\n                                                overflow: 'hidden'\n                                            }}>\n                                                <Text>{e.note}</Text>\n                                            </View>\n                                        </View>\n                                        <Text style={{fontSize: SizeScheme.get().font.e }}>\n                                            {e.checked.filter(ex=>ex).length}/{e.checked.length}\n                                        </Text>\n                                    </View>\n                                </Pressable>\n                            </DynamicListItem>\n                        </View>\n                    ))\n                }\n\n            </ContentView>\n\n\n            <Modal\n                visible={showTaskNoteModal}\n                handleClose={() => {\n                    setShowTaskNoteModal(false);\n                }}\n                style={{ height: 350 }}>\n\n                <View>\n                    <Input\n                        label='Add Note for Task'\n                        type={InputTypes.TEXT}\n                        settings={[Settings.TEXT_MULTILINE_6]}\n                        value={[taskNote]}\n                        handleChange={val => { setTaskNote(val[0]) }} />\n                    <Takoz height={20} />\n                    <ButtonText\n                        label='Save Task'\n                        handleClick={async () => {\n                            let taskStr = await asyncStoreTasks.getItem();\n                            if (!taskStr) {\n                                taskStr = '[]';\n                            }\n                            const tasks: ITask[] = JSON.parse(taskStr);\n                            tasks[taskIndex].note = taskNote;\n                            await asyncStoreTasks.setItem(JSON.stringify(tasks));\n                            setShowTaskNoteModal(false);\n\n                            const tempShowOptions = [...showOptions];\n                            tempShowOptions[taskIndex] = false;\n                            setShowOptions(tempShowOptions);\n\n                            load();\n                        }} />\n                </View>\n\n            </Modal>\n        </Layout>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { ButtonIcon, ButtonText, ColorScheme, Header, Input, InputTypes, Layout, Modal, Settings, SizeScheme, Takoz } from '@19sth/react-native-pieces';\nimport { faAdd, faShoePrints, faSquarePlus } from '@fortawesome/free-solid-svg-icons';\nimport ContentView from '../components/ContentView';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { KEY_DEFINITIONS, KEY_TASKS } from '../util';\nimport { Pressable, Text, View } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { ITask } from '../contracts';\n\nexport default function Definitions({ navigation }) {\n    const { getItem } = useAsyncStorage(KEY_DEFINITIONS);\n    const asyncStoreTasks = useAsyncStorage(KEY_TASKS);\n    const [definitions, setDefinitions] = useState([] as { title: string, steps: any[] }[]);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [taskNote, setTaskNote] = useState('');\n    const [defIndex, setDefIndex] = useState(-1);\n    const isFocused = useIsFocused();\n\n    const load = async () => {\n        let defStr = await getItem();\n        if (!defStr) {\n            defStr = '[]';\n        }\n        const defs = JSON.parse(defStr);\n        setDefinitions(defs);\n    }\n\n    useEffect(() => {\n        load();\n    }, [isFocused])\n\n    return (\n        <Layout>\n            <Header\n                navigation={navigation}\n                title='Check'\n                buttons={[\n                    {\n                        faIcon: faAdd, handleClick: () => {\n                            navigation.push('DefinitionEdit')\n                        }\n                    }\n                ]}\n            />\n\n            <ContentView>\n\n                <View>\n                    {\n                        definitions.length < 1 && (\n                            <View>\n                                <Takoz height={20} />\n                                <Text style={{\n                                    fontSize: SizeScheme.get().font.c,\n                                    textAlign: 'center'\n                                }}>\n                                    There is definition.\n                                </Text>\n                                <Takoz height={20} />\n                                <ButtonText\n                                    label='Create A Definition'\n                                    handleClick={() => {\n                                        navigation.push('DefinitionEdit');\n                                    }} />\n                            </View>\n                        )\n                    }\n                    {\n                        definitions.length > 0 &&\n                        definitions.map((e, i) => (\n                            <Pressable key={`def_${i}`} onPress={() => {\n                                navigation.push('DefinitionEdit', { index: i });\n                            }}>\n                                <View style={{\n                                    marginBottom: 20,\n                                    borderBottomWidth: 1,\n                                    borderBottomColor: ColorScheme.get().secondary,\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    justifyContent: 'space-between',\n                                    paddingHorizontal: 5,\n                                    paddingBottom: 5\n                                }}>\n                                    <ButtonIcon\n                                        faIcon={faSquarePlus}\n                                        handleClick={() => {\n                                            setDefIndex(i);\n                                            setTaskNote('');\n                                            setModalVisible(true);\n                                        }} />\n                                    <View style={{\n                                        flex: 1,\n                                        paddingHorizontal: 10\n                                    }}>\n                                        <Text style={{\n                                            fontSize: SizeScheme.get().font.c\n                                        }}>\n                                            {e.title}\n                                        </Text>\n                                    </View>\n                                    <View style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center'\n                                    }}>\n                                        <Text style={{\n                                            fontSize: SizeScheme.get().font.d\n                                        }}>\n                                            {e.steps.length}\n                                        </Text>\n                                        <Takoz width={5} />\n                                        <FontAwesomeIcon icon={faShoePrints} />\n                                    </View>\n                                </View>\n                            </Pressable>\n                        ))\n                    }\n                </View>\n\n                <Modal\n                    visible={modalVisible}\n                    handleClose={() => {\n                        setModalVisible(false);\n                    }}\n                    style={{ height: 375 }}>\n\n                    <View>\n                        <Input\n                            label='Add Note for Task'\n                            type={InputTypes.TEXT}\n                            settings={[Settings.TEXT_MULTILINE_6]}\n                            value={[taskNote]}\n                            handleChange={val => { setTaskNote(val[0]) }} />\n                        <Takoz height={10} />\n                        <ButtonText\n                            label='Add Task'\n                            handleClick={async () => {\n                                let taskStr = await asyncStoreTasks.getItem();\n                                if (!taskStr) {\n                                    taskStr = '[]';\n                                }\n                                const tasks: ITask[] = JSON.parse(taskStr);\n                                tasks.push({\n                                    note: taskNote,\n                                    definitionIndex: defIndex,\n                                    title: definitions[defIndex].title,\n                                    steps: definitions[defIndex].steps,\n                                    checked: definitions[defIndex].steps.map(_ => false)\n                                });\n                                await asyncStoreTasks.setItem(JSON.stringify(tasks));\n                                navigation.goBack();\n                            }} />\n                    </View>\n\n                </Modal>\n\n            </ContentView>\n        </Layout>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { ButtonIcon, Header, Input, InputTypes, Layout, SizeScheme, Takoz } from '@19sth/react-native-pieces';\nimport ContentView, { ViewType } from '../components/ContentView';\nimport { Text, View } from 'react-native';\nimport { IconDefinition, faAdd, faAngleDown, faAngleUp, faCheck, faFloppyDisk, faTrash, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { KEY_DEFINITIONS, KEY_TASKS } from '../util';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport DynamicListItem from '../components/DynamicListItem';\n\nexport default function DefinitionEdit({ navigation, route }) {\n    const [title, setTitle] = useState(\"\");\n    const [steps, setSteps] = useState([{ content: \"\", showOptions: false }]);\n    const { getItem, setItem } = useAsyncStorage(KEY_DEFINITIONS);\n\n    const load = async () => {\n        const defStr = await getItem();\n        const defs = JSON.parse(defStr);\n        setSteps(defs[route.params.index].steps.map(e=>({content: e, showOptions: false})));\n        setTitle(defs[route.params.index].title);\n    }\n\n    useEffect(() => {\n        if (route.params && route.params.index !== undefined) {\n            load();\n        }\n    }, [route.params]);\n\n    const deleteButton = [] as {\n        faIcon: IconDefinition;\n        handleClick: () => void;\n    }[];\n\n    if (route.params && route.params.index !== undefined) {\n        deleteButton.push({\n            faIcon: faTrashCan,\n            handleClick: async () => {\n                const defStr = await getItem();\n                const defs = JSON.parse(defStr);\n                defs.splice(route.params.index, 1);\n                setItem(JSON.stringify(defs));\n                setSteps(defs.steps);\n                navigation.goBack();\n            }\n        });\n    }\n\n    return (\n        <Layout>\n            <Header\n                navigation={navigation}\n                title='Check'\n                buttons={[\n                    ...deleteButton,\n                    {\n                        faIcon: faFloppyDisk, handleClick: async () => {\n                            let defString = await getItem();\n                            if (!defString) {\n                                defString = '[]';\n                            }\n\n                            const definitions = JSON.parse(defString);\n\n                            if (route.params && route.params.index !== undefined) {\n                                definitions[route.params.index] = {\n                                    title,\n                                    \"steps\" : steps.map(e=>e.content)\n                                }\n                            } else {\n                                definitions.push({\n                                    title,\n                                    \"steps\" : steps.map(e=>e.content)\n                                });\n                            }\n\n                            setItem(JSON.stringify(definitions));\n\n                            navigation.goBack();\n                        }\n                    }\n                ]}\n            />\n            <ContentView viewType={ViewType.SCROLLVIEW}>\n\n                <Input\n                    label='Title'\n                    handleChange={e => setTitle(e[0])}\n                    value={[title]}\n                    type={InputTypes.TEXT} />\n\n                <Takoz />\n\n                <View style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between'\n                }}>\n                    <Text style={{\n                        fontSize: SizeScheme.get().font.c,\n                        fontWeight: 'bold'\n                    }}>Steps</Text>\n                    <ButtonIcon faIcon={faAdd} handleClick={() => {\n                        setSteps([...steps, { content: \"\", showOptions: false }]);\n                    }} />\n                </View>\n\n                {\n                    steps.map((e, i) => (\n                        <DynamicListItem\n                            key={`DynamicListItem_${i}`}\n                            index={i}\n                            buttons={[\n                                {\n                                    faIcon: faAngleUp, handleClick: ix => {\n                                        if (ix > 0) {\n                                            const tSteps = [...steps];\n                                            const temp = tSteps[ix];\n                                            tSteps[ix] = tSteps[ix - 1];\n                                            tSteps[ix - 1] = temp;\n                                            setSteps(tSteps);\n                                        }\n                                    }\n                                },\n                                {\n                                    faIcon: faAngleDown, handleClick: ix => {\n                                        if (ix < steps.length - 1) {\n                                            const tSteps = [...steps];\n                                            const temp = tSteps[ix];\n                                            tSteps[ix] = tSteps[ix + 1];\n                                            tSteps[ix + 1] = temp;\n                                            setSteps(tSteps);\n                                        }\n                                    }\n                                },\n                                {\n                                    faIcon: faTrashCan, handleClick: ix => {\n                                        const tSteps = [...steps];\n                                        tSteps.splice(ix, 1);\n                                        setSteps(tSteps);\n                                    }\n                                },\n                                {\n                                    faIcon: faCheck, handleClick: ix => {\n                                        const tSteps = [...steps];\n                                        tSteps[ix].showOptions = !tSteps[ix].showOptions;\n                                        setSteps(tSteps);\n                                    }\n                                },\n                            ]}\n                            showOptions={steps[i].showOptions}\n                            openShowOptions={ix => {\n                                if (steps.every(ex => ex.showOptions === false)) {\n                                    const tSteps = [...steps];\n                                    tSteps[ix].showOptions = !tSteps[ix].showOptions;\n                                    setSteps(tSteps);\n                                }\n                            }}\n                            height={70}>\n\n                            <View style={{\n                                paddingStart: 10,\n                                paddingTop: 15\n                            }}>\n                                <Input\n                                    label=''\n                                    type={InputTypes.TEXT}\n                                    value={[e.content]}\n                                    handleChange={val => {\n                                        let tSteps = [...steps];\n                                        tSteps[i].content = val[0];\n                                        setSteps(tSteps);\n                                    }} />\n                            </View>\n\n                        </DynamicListItem>\n                    ))\n                }\n            </ContentView>\n        </Layout>\n    );\n}","import { ColorScheme, Header, Layout, SizeScheme } from '@19sth/react-native-pieces';\nimport React, { useEffect, useState } from 'react';\nimport ContentView from '../components/ContentView';\nimport { ITask } from '../contracts';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { KEY_TASKS } from '../util';\nimport { Pressable, Text, View } from 'react-native';\n\nexport default function Task({ navigation, route }) {\n    const [task, setTask] = useState({} as ITask);\n    const asyncStoreTasks = useAsyncStorage(KEY_TASKS);\n\n    const load = async () => {\n        if (route.params && route.params.taskIndex !== undefined) {\n            let taskStr = await asyncStoreTasks.getItem();\n            if (!taskStr) {\n                taskStr = '[]';\n            }\n            const taskList: ITask[] = JSON.parse(taskStr);\n            console.log(taskList[route.params.taskIndex]);\n            setTask(taskList[route.params.taskIndex]);\n        }\n    }\n\n    useEffect(() => {\n        load();\n    }, []);\n\n    return (\n        <Layout>\n            <Header\n                navigation={navigation}\n                title='Check'\n                buttons={[]}\n            />\n\n            <ContentView>\n                <Text style={{\n                    fontSize: SizeScheme.get().font.c,\n                    fontWeight: 'bold'\n                }}>\n                    {task.title}\n                </Text>\n\n                <View style={{\n                    padding: 10,\n                    backgroundColor: ColorScheme.get().backgroundDark,\n                    marginVertical: 20\n                }}>\n                    <Text>\n                        {task.note}\n                    </Text>\n                </View>\n                {\n                    (task.steps !== undefined) && task.steps.map((e, i) => (\n                        <Pressable key={`step_${i}`} onPress={async ()=>{\n                            const tempTask = {...task};\n                            tempTask.checked[i] = !tempTask.checked[i];\n\n                            const taskStr = await asyncStoreTasks.getItem();\n                            const taskList: ITask[] = JSON.parse(taskStr);\n                            taskList[route.params.taskIndex] = tempTask;\n\n                            await asyncStoreTasks.setItem(JSON.stringify(taskList));\n\n                            load();\n                        }}>\n                            <View style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                marginTop: 20,\n                                paddingBottom: 10,\n                                alignItems: 'center',\n                                borderBottomWidth: 1,\n                                borderBottomColor: ColorScheme.get().secondary\n                            }}>\n                                <View style={{\n                                    height: 20,\n                                    width: 20,\n                                    borderWidth: 2,\n                                    borderRadius: 5,\n                                    borderColor: ColorScheme.get().shadowColor,\n                                    backgroundColor: (task.checked[i]) ? ColorScheme.get().primary : 'transparent'\n                                }}>\n                                </View>\n                                <View style={{\n                                    flex: 1,\n                                    paddingStart: 20\n                                }}>\n                                    <Text style={{\n                                        fontSize: SizeScheme.get().font.d\n                                    }}>\n                                        {e}\n                                    </Text>\n                                </View>\n                            </View>\n                        </Pressable>\n                    ))\n                }\n            </ContentView>\n        </Layout>\n    )\n}","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Dashboard from './src/screens/Dashboard';\nimport Definitions from './src/screens/Definitions';\nimport DefinitionEdit from './src/screens/DefinitionEdit';\nimport Task from './src/screens/Task';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n          <Stack.Screen\n            name=\"Dashboard\"\n            component={Dashboard}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Definitions\"\n            component={Definitions}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"DefinitionEdit\"\n            component={DefinitionEdit}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"Task\"\n            component={Task}\n            options={{ headerShown: false }}\n          />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [773], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ViewType","ContentView","_ref","viewType","children","height","SizeScheme","get","screen","min","SCROLLVIEW","_jsx","ScrollView","style","View","minHeight","KEY_DEFINITIONS","KEY_TASKS","DynamicListItem","props","showOptions","marginTop","display","flexDirection","justifyContent","alignItems","buttons","map","e","i","ButtonIcon","faIcon","handleClick","index","_jsxs","width","Text","fontSize","font","d","fontWeight","color","ColorScheme","secondary","flex","paddingHorizontal","faEllipsisVertical","openShowOptions","Dashboard","navigation","_useState","useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","setShowOptions","_useState5","_useState6","taskNote","setTaskNote","_useState7","_useState8","showTaskNoteModal","setShowTaskNoteModal","_useState9","_useState10","taskIndex","setTaskIndex","asyncStoreTasks","useAsyncStorage","isFocused","useIsFocused","load","_ref2","_asyncToGenerator","taskStr","getItem","taskList","JSON","parse","apply","arguments","useEffect","Layout","Header","title","faCircleQuestion","window","open","faList","push","length","Takoz","c","textAlign","ButtonText","label","faTrashCan","_handleClick","ix","tShowOptions","_toConsumableArray","splice","setItem","stringify","_x","faEdit","note","faCheck","Pressable","onPress","paddingStart","maxHeight","overflow","checked","filter","ex","Modal","visible","handleClose","Input","type","InputTypes","TEXT","settings","Settings","TEXT_MULTILINE_6","value","handleChange","val","tempShowOptions","Definitions","definitions","setDefinitions","modalVisible","setModalVisible","defIndex","setDefIndex","defStr","defs","faAdd","marginBottom","borderBottomWidth","borderBottomColor","paddingBottom","faSquarePlus","steps","FontAwesomeIcon","icon","faShoePrints","definitionIndex","_","goBack","DefinitionEdit","route","setTitle","content","setSteps","_useAsyncStorage","params","undefined","deleteButton","concat","faFloppyDisk","_handleClick2","defString","faAngleUp","tSteps","temp","faAngleDown","every","paddingTop","Task","task","setTask","console","log","padding","backgroundColor","backgroundDark","marginVertical","tempTask","_objectSpread","borderWidth","borderRadius","borderColor","shadowColor","primary","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","name","component","options","headerShown","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","key","r","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}